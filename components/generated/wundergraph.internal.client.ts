// Code generated by wunderctl. DO NOT EDIT.

import {
	AddMessageResponse,
	AddMessageInput,
	InternalAddMessageInput,
	InjectedAddMessageInput,
	AllUsersResponse,
	AllUsersInput,
	InternalAllUsersInput,
	InjectedAllUsersInput,
	ChangeUserNameResponse,
	ChangeUserNameInput,
	InternalChangeUserNameInput,
	InjectedChangeUserNameInput,
	CountriesResponse,
	DeleteAllMessagesByUserEmailResponse,
	DeleteAllMessagesByUserEmailInput,
	InternalDeleteAllMessagesByUserEmailInput,
	InjectedDeleteAllMessagesByUserEmailInput,
	GermanyResponse,
	HelloResponse,
	MessagesResponse,
	MockQueryResponse,
	QueryResponse,
	SetLastLoginResponse,
	SetLastLoginInput,
	InternalSetLastLoginInput,
	InjectedSetLastLoginInput,
	UpdateUserResponse,
	UpdateUserInput,
	InternalUpdateUserInput,
	InjectedUpdateUserInput,
	UsResponse,
	UserInfoResponse,
	InternalUserInfoInput,
	InjectedUserInfoInput,
} from "./models";

export interface InternalClient {
	queries: {
		AllUsers: (input: InternalAllUsersInput) => Promise<AllUsersResponse>;
		Countries: () => Promise<CountriesResponse>;
		Germany: () => Promise<GermanyResponse>;
		Hello: () => Promise<HelloResponse>;
		Messages: () => Promise<MessagesResponse>;
		MockQuery: () => Promise<MockQueryResponse>;
		Query: () => Promise<QueryResponse>;
		Us: () => Promise<UsResponse>;
		UserInfo: (input: InternalUserInfoInput) => Promise<UserInfoResponse>;
	};
	mutations: {
		AddMessage: (input: InternalAddMessageInput) => Promise<AddMessageResponse>;
		ChangeUserName: (input: InternalChangeUserNameInput) => Promise<ChangeUserNameResponse>;
		DeleteAllMessagesByUserEmail: (
			input: InternalDeleteAllMessagesByUserEmailInput
		) => Promise<DeleteAllMessagesByUserEmailResponse>;
		SetLastLogin: (input: InternalSetLastLoginInput) => Promise<SetLastLoginResponse>;
		UpdateUser: (input: InternalUpdateUserInput) => Promise<UpdateUserResponse>;
	};
	withHeaders: (headers: { [key: string]: string }) => InternalClient;
}
